plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.hilt.android)
    alias(libs.plugins.navigation.safeargs)
    alias(libs.plugins.ksp)
}

android {
    compileSdkVersion 36
    buildToolsVersion = "30.0.3"

    defaultConfig {
        applicationId "com.edufelip.amazing_note"
        minSdkVersion 30
        targetSdk 36
        versionCode 8
        versionName "1.1.0"
        testInstrumentationRunner "com.edufelip.amazing_note.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'META-INF/*.kotlin_module']
        }
    }


    testOptions {
        unitTests.returnDefaultValues = true
    }
    namespace 'com.edufelip.amazing_note'
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.appcompat
    implementation libs.constraintlayout

    // Material Design
    implementation libs.material

    // Architectural Components
    implementation libs.lifecycle.viewmodel.ktx

    // Lifecycle
    implementation libs.lifecycle.livedata.ktx
    implementation libs.lifecycle.runtime.ktx

    // Room
    implementation libs.room.runtime
    implementation libs.legacy.support.v4
    implementation libs.navigation.testing
    ksp libs.room.compiler

    // Kotlin Extensions and Coroutines support for Room
    implementation libs.room.ktx

    // Coroutines
    implementation libs.kotlin.coroutines.core
    implementation libs.kotlin.coroutines.android

    // Coroutine Lifecycle Scopes
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.runtime.ktx

    // Navigation Components
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    // Activity KTX for viewModels()
    implementation libs.activity.ktx

    //Dagger - Hilt
    implementation libs.hilt.android
    ksp libs.hilt.android.compiler

    ksp libs.androidx.hilt.compiler

    // Local Unit Tests
    implementation libs.test.core
    testImplementation libs.junit
    testImplementation libs.arch.core.testing
    testImplementation libs.kotlin.coroutines.test
    testImplementation libs.truth
    testImplementation libs.mockito.core
    testImplementation libs.kotlin.coroutines.test

    // Instrumented Unit Tests
    androidTestImplementation libs.junit
    androidTestImplementation libs.dexmaker.mockito
    androidTestImplementation libs.kotlin.coroutines.test
    androidTestImplementation libs.arch.core.testing
    androidTestImplementation libs.truth
    androidTestImplementation libs.test.ext.junit
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.mockito.core
    androidTestImplementation libs.espresso.contrib
    androidTestImplementation libs.hilt.android.testing
    androidTestImplementation libs.test.rules
    kspAndroidTest libs.hilt.android.compiler
    debugImplementation libs.fragment.testing
}